<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Agency;
use AppBundle\Entity\User;
use Doctrine\ORM\Query;

/**
 * ProductHostingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductHostingRepository extends \Doctrine\ORM\EntityRepository{


    public function listProductsHeberDispoPerAgency(Agency $agency){
        
        // On charge l'ensemble des produits qui appartiennent à cette agence et, pour lesquels l'utilisateur peut acheter un hébergement : OK
        // si le serveur ne possede pas plus de vhosts que défini : Ok
        // et que le disque n'est pas plein (utilisation < 90% ) = OK


        $query = $this->createQueryBuilder('p')
            ->select('p')
            ->innerJoin('p.agency', 'a')
            ->innerJoin('p.instance','i')
            ->join('i.numberMaxVhosts','mvh')
            ->where('p.agency = :agency')
            ->andWhere('p.bookableByCustomer = 1')
            //->andWhere('mvh.value > (SELECT COUNT( vh.id ) FROM  AppBundle:Vhosts vh WHERE vh.instance = p.instance )')
            ->andWhere('mvh.value > (i.nbVhosts+ i.nbEmptyHerberMutu )')
            ->andWhere('((i.usedDisk/(i.usedDisk + i.freeDisk))*100) < 90 ')

            ->setParameters(array('agency' => $agency))
            ->getQuery();
       //  throw new \SoapFault('z',$query->getDQL());
            $query = $query->getResult();


        return $query;
    }



    public function listProductsHeberDispoPerGestionnaire(Agency $agency){

        // On charge l'ensemble des produits qui appartiennent à cette agence et, pour lesquels l'utilisateur peut acheter un hébergement : OK
        // si le serveur ne possede pas plus de vhosts que défini : Ok
        // et que le disque n'est pas plein (utilisation < 90% ) = OK


        $query = $this->createQueryBuilder('p')
            ->select('p')
            ->innerJoin('p.agency', 'a')
            ->innerJoin('p.instance','i')
            ->join('i.numberMaxVhosts','mvh')
            ->where('p.agency = :agency')
           // ->andWhere('p.bookableByCustomer = 1')
            //->andWhere('mvh.value > (SELECT COUNT( vh.id ) FROM  AppBundle:Vhosts vh WHERE vh.instance = p.instance )')
            ->andWhere('mvh.value > (i.nbVhosts+ i.nbEmptyHerberMutu )')
            ->andWhere('((i.usedDisk/(i.usedDisk + i.freeDisk))*100) < 90 ')

            ->setParameters(array('agency' => $agency))
            ->getQuery();
        //  throw new \SoapFault('z',$query->getDQL());
        $query = $query->getResult();


        return $query;
    }

}
